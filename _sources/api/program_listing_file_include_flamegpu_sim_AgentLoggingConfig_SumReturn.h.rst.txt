
.. _program_listing_file_include_flamegpu_sim_AgentLoggingConfig_SumReturn.h:

Program Listing for File AgentLoggingConfig_SumReturn.h
=======================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_flamegpu_sim_AgentLoggingConfig_SumReturn.h>` (``include/flamegpu/sim/AgentLoggingConfig_SumReturn.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef INCLUDE_FLAMEGPU_SIM_AGENTLOGGINGCONFIG_SUMRETURN_H_
   #define INCLUDE_FLAMEGPU_SIM_AGENTLOGGINGCONFIG_SUMRETURN_H_
   
   #include <cstdint>
   
   namespace flamegpu {
   
   template <typename T> struct sum_input_t;
   template <> struct sum_input_t<float> { typedef double result_t; };
   template <> struct sum_input_t<double> { typedef double result_t; };
   template <> struct sum_input_t<char> { typedef uint64_t result_t; };
   template <> struct sum_input_t<uint8_t> { typedef uint64_t result_t; };
   template <> struct sum_input_t<uint16_t> { typedef uint64_t result_t; };
   template <> struct sum_input_t<uint32_t> { typedef uint64_t result_t; };
   template <> struct sum_input_t<uint64_t> { typedef uint64_t result_t; };
   template <> struct sum_input_t<int8_t> { typedef int64_t result_t; };
   template <> struct sum_input_t<int16_t> { typedef int64_t result_t; };
   template <> struct sum_input_t<int32_t> { typedef int64_t result_t; };
   template <> struct sum_input_t<int64_t> { typedef int64_t result_t; };
   template <typename T> struct sum_input_t { typedef T result_t; };
   
   }  // namespace flamegpu
   
   #endif  // INCLUDE_FLAMEGPU_SIM_AGENTLOGGINGCONFIG_SUMRETURN_H_
