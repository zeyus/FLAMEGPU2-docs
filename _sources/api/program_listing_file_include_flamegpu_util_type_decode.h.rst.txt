
.. _program_listing_file_include_flamegpu_util_type_decode.h:

Program Listing for File type_decode.h
======================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_flamegpu_util_type_decode.h>` (``include/flamegpu/util/type_decode.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef INCLUDE_FLAMEGPU_UTIL_TYPE_DECODE_H_
   #define INCLUDE_FLAMEGPU_UTIL_TYPE_DECODE_H_
   
   template <typename T>
   struct type_decode {
       // Length of the decoded type
       static constexpr unsigned int len_t = 1;
       // Type of the decoded type
       typedef T type_t;
   };
   
   #if defined(USE_GLM) || defined(GLM_VERSION)
   #ifndef GLM_VERSION
   #ifdef __CUDACC__
   #ifdef __NVCC_DIAG_PRAGMA_SUPPORT__
   #pragma nv_diag_suppress = esa_on_defaulted_function_ignored
   #else
   #pragma diag_suppress = esa_on_defaulted_function_ignored
   #endif  // __NVCC_DIAG_PRAGMA_SUPPORT__
   #endif  // __CUDACC__
   #include <glm/glm.hpp>
   #endif
   
   template <int N, typename T, glm::qualifier Q>
   struct type_decode<glm::vec<N, T, Q>> {
       static constexpr unsigned int len_t = N;
       typedef T type_t;
   };
   #endif
   
   #endif  // INCLUDE_FLAMEGPU_UTIL_TYPE_DECODE_H_
