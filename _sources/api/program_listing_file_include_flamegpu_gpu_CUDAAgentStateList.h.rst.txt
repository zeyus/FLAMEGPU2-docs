
.. _program_listing_file_include_flamegpu_gpu_CUDAAgentStateList.h:

Program Listing for File CUDAAgentStateList.h
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_flamegpu_gpu_CUDAAgentStateList.h>` (``include/flamegpu/gpu/CUDAAgentStateList.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef INCLUDE_FLAMEGPU_GPU_CUDAAGENTSTATELIST_H_
   #define INCLUDE_FLAMEGPU_GPU_CUDAAGENTSTATELIST_H_
   
   #include <string>
   #include <memory>
   #include <map>
   #include <list>
   
   #include "flamegpu/gpu/CUDAFatAgentStateList.h"
   
   class CUDAScatter;
   struct VarOffsetStruct;
   class CUDAAgent;
   
   class CUDAAgentStateList {
    public:
       CUDAAgentStateList(
           const std::shared_ptr<CUDAFatAgentStateList> &fat_list,
           CUDAAgent& cuda_agent,
           const unsigned int &_fat_index,
           const AgentData& description,
           bool _isSubStateList = false);
       CUDAAgentStateList(
           const std::shared_ptr<CUDAFatAgentStateList> &fat_list,
           CUDAAgent& cuda_agent,
           const unsigned int &_fat_index,
           const AgentData& description,
           bool _isSubStateList,
           const SubAgentData::Mapping &mapping);
       void resize(const unsigned int &minimumSize, const bool &retainData);
       unsigned int getSize() const;
       unsigned int getAllocatedSize() const;
       void *getVariablePointer(const std::string &variable_name);
       void setAgentData(const AgentVector &data, CUDAScatter &scatter, const unsigned int &streamId, const cudaStream_t& stream);
       void getAgentData(AgentVector&data) const;
       void scatterHostCreation(const unsigned int &newSize, char *const d_inBuff, const VarOffsetStruct &offsets, CUDAScatter &scatter, const unsigned int &streamId, const cudaStream_t &stream);
       void scatterSort(CUDAScatter &scatter, const unsigned int &streamId, const cudaStream_t &stream);
       void scatterNew(void * d_newBuff, const unsigned int &newSize, CUDAScatter &scatter, const unsigned int &streamId, const cudaStream_t &stream);
       bool getIsSubStatelist();
       void initUnmappedVars(CUDAScatter &scatter, const unsigned int &streamId, const cudaStream_t &stream);
       void clear();
   
    private:
       std::map<std::string, std::shared_ptr<VariableBuffer>> variables;
       const unsigned int fat_index;
       CUDAAgent &agent;
       const std::shared_ptr<CUDAFatAgentStateList> parent_list;
       const bool isSubStateList;
       std::list<std::shared_ptr<VariableBuffer>> unmappedBuffers;
   };
   
   #endif  // INCLUDE_FLAMEGPU_GPU_CUDAAGENTSTATELIST_H_
