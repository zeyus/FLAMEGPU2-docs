
.. _program_listing_file_include_flamegpu_util_Any.h:

Program Listing for File Any.h
==============================

|exhale_lsh| :ref:`Return to documentation for file <file_include_flamegpu_util_Any.h>` (``include/flamegpu/util/Any.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef INCLUDE_FLAMEGPU_UTIL_ANY_H_
   #define INCLUDE_FLAMEGPU_UTIL_ANY_H_
   
   struct Any {
       Any(const void *_ptr, const size_t &_length, const std::type_index &_type, const unsigned int &_elements)
           : ptr(malloc(_length))
           , length(_length)
           , type(_type)
           , elements(_elements) {
           memcpy(ptr, _ptr, length);
       }
       template<typename T>
       explicit Any(const T&other)
           : ptr(malloc(sizeof(T)))
           , length(sizeof(T))
           , type(typeid(T))
           , elements(1) {
           memcpy(ptr, &other, sizeof(T));
       }
       Any(const Any &_other)
           : ptr(malloc(_other.length))
           , length(_other.length)
           , type(_other.type)
           , elements(_other.elements) {
           memcpy(ptr, _other.ptr, length);
       }
       /*
        * Releases the allocated memory
        */
       ~Any() {
           free(ptr);
       }
       void operator=(const Any &_other) = delete;
       void *const ptr;
       const size_t length;
       const std::type_index type;
       const unsigned int elements;
   };
   
   #endif  // INCLUDE_FLAMEGPU_UTIL_ANY_H_
